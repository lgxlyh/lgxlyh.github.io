<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>AWK常见用法</title>
      <link href="/2018/12/07/AWK/"/>
      <url>/2018/12/07/AWK/</url>
      
        <content type="html"><![CDATA[<h3 id="1-一看就懂系列"><a href="#1-一看就懂系列" class="headerlink" title="1.一看就懂系列"></a>1.一看就懂系列</h3><p>以查看质控样记录为例</p><h5 id="第一域awk-F-39-39-39-print-1-39"><a href="#第一域awk-F-39-39-39-print-1-39" class="headerlink" title="第一域awk  -F &#39;|&#39; &#39;{print $1}&#39;"></a>第一域<code>awk  -F &#39;|&#39; &#39;{print $1}&#39;</code></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cat</span> zhikong.lgx</span><br><span class="line">电导率|207131|GSB 07-2245-2008|181µS/cm|2020-03-31|2018-10-13 01:12:59</span><br><span class="line">氨氮|2005115|GSB 07-3164-2014|5.29mg/L|2023-03-31|2018-10-13 01:13:00</span><br><span class="line">总氮|203251|GSB 07-3168-2014|2.48mg/L|2023-03-31|2018-10-13 01:13:00</span><br><span class="line">化学需氧量|2001127|GSB 07-3161-2014|188mg/L|2023-03-31|2018-10-13 01:13:00</span><br><span class="line"></span><br><span class="line"><span class="variable">$cat</span> zhikong.lgx | awk  -F <span class="string">'|'</span> <span class="string">'&#123;print $1&#125;'</span></span><br><span class="line">电导率</span><br><span class="line">氨氮</span><br><span class="line">总氮</span><br><span class="line">化学需氧量</span><br></pre></td></tr></table></figure><p>流程：</p><ol><li>读入有<code>&#39;\n&#39;</code>换行符分割的一条记录</li><li>按指定的域分隔符划分域，填充域</li><li><code>$0</code>表示所有域,<code>$1</code>表示第一个域,<code>$n</code>表示第n个域。</li><li>默认域分隔符是”空白键” 或 “Tab键”,例中用<code>-F &#39;|&#39;</code>指定<code>|</code>为域分割符.    </li></ol><h5 id="第一域和第二域以tab键分割-print-1-quot-t-quot-2"><a href="#第一域和第二域以tab键分割-print-1-quot-t-quot-2" class="headerlink" title="第一域和第二域以tab键分割: {print $1&quot;\t&quot;$2}"></a>第一域和第二域以tab键分割: <code>{print $1&quot;\t&quot;$2}</code></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cat</span> zhikong.lgx |awk  -F <span class="string">'|'</span>  <span class="string">'&#123;print $1"\t"$2&#125;'</span></span><br><span class="line">电导率  207131</span><br><span class="line">氨氮    2005115</span><br><span class="line">总氮    203251</span><br><span class="line">化学需氧量      2001127</span><br></pre></td></tr></table></figure><h5 id="添加列名name、id-最后一行添加”Date-日期”。BEGIN……END……"><a href="#添加列名name、id-最后一行添加”Date-日期”。BEGIN……END……" class="headerlink" title="添加列名name、id,最后一行添加”Date 日期”。BEGIN……END……"></a>添加列名name、id,最后一行添加”Date 日期”。BEGIN……END……</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$cat</span> zhikong.lgx | awk -F <span class="string">'|'</span> <span class="string">'BEGIN &#123;print "name""\t""id"&#125; &#123;print $1"\t"$2&#125; END &#123;print "Date""\t"i&#125;'</span> i=`date +%F`</span><br><span class="line">name    id</span><br><span class="line">电导率  207131</span><br><span class="line">氨氮    2005115</span><br><span class="line">总氮    203251</span><br><span class="line">化学需氧量      2001127</span><br><span class="line">Date    2018-12-07</span><br></pre></td></tr></table></figure><h5 id="正则搜索"><a href="#正则搜索" class="headerlink" title="正则搜索"></a>正则搜索</h5><p>例如找”p”开头的:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">'|'</span> <span class="string">'/^p/&#123;print $1"\t"$2&#125;'</span> py/zhikong.lgx</span><br><span class="line">pH      202169</span><br><span class="line">pH      202172</span><br><span class="line">pH      202173</span><br><span class="line">pH      202175</span><br><span class="line">pH      202176</span><br><span class="line">pH      202178</span><br><span class="line">pH      202177</span><br><span class="line">pH      202174</span><br></pre></td></tr></table></figure><h5 id="NR、NF……"><a href="#NR、NF……" class="headerlink" title="NR、NF……"></a>NR、NF……</h5><p>其它示例,变量见”一般不看系列”–&gt;”awk内置变量”</p><ul><li>第11条</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$awk</span> -F <span class="string">"|"</span> <span class="string">'NR==11 &#123;print $1"\t"$2&#125;'</span> py/zhikong.lgx</span><br><span class="line">氨氮    2005106</span><br></pre></td></tr></table></figure><ul><li>共多少条</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$awk</span> -F <span class="string">"|"</span> <span class="string">'/^p/&#123;print $1"\t"$2&#125;;END&#123;print "该文件所有记录共"NR"条"&#125;'</span> py/zhikong.lgx</span><br><span class="line">pH      202169</span><br><span class="line">pH      202172</span><br><span class="line">pH      202173</span><br><span class="line">pH      202175</span><br><span class="line">pH      202176</span><br><span class="line">pH      202178</span><br><span class="line">pH      202177</span><br><span class="line">pH      202174</span><br><span class="line">该文件所有记录共121条</span><br></pre></td></tr></table></figure><h3 id="2-一般不看系列"><a href="#2-一般不看系列" class="headerlink" title="2.一般不看系列"></a>2.一般不看系列</h3><blockquote><p>以下内容来源于<a href="http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html" target="_blank" rel="noopener">作者:ggjucheng</a><br>未经验证,不保证粘贴后格式正确</p></blockquote><h4 id="awk内置变量"><a href="#awk内置变量" class="headerlink" title="awk内置变量"></a>awk内置变量</h4><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ARGC               命令行参数个数</span><br><span class="line">ARGV               命令行参数排列</span><br><span class="line">ENVIRON            支持队列中系统环境变量的使用</span><br><span class="line">FILENAME           awk浏览的文件名</span><br><span class="line">FNR                浏览文件的记录数</span><br><span class="line">FS                 设置输入域分隔符，等价于命令行 -F选项</span><br><span class="line">NF                 浏览记录的域的个数</span><br><span class="line">NR                 已读的记录数</span><br><span class="line">OFS                输出域分隔符</span><br><span class="line">ORS                输出记录分隔符</span><br><span class="line">RS                 控制记录分隔符</span><br></pre></td></tr></table></figure><h4 id="print和printf"><a href="#print和printf" class="headerlink" title="print和printf"></a>print和printf</h4><p>awk中同时提供了print和printf两种打印输出的函数。</p><p>其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。</p><p>printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="keyword">printf</span>(<span class="string">"filename:%10s,linenumber:%s,columns:%s,linecontent:%s\n"</span>,FILENAME,NR,NF,$0)&#125;</span><br></pre></td></tr></table></figure><h4 id="awk编程"><a href="#awk编程" class="headerlink" title="awk编程"></a>awk编程</h4><h5 id="变量和赋值"><a href="#变量和赋值" class="headerlink" title="变量和赋值"></a>变量和赋值</h5><h6 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h6><p>除了awk的内置变量，awk还可以自定义变量。<br>下面统计/etc/passwd的账户人数</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">'&#123;count++;print $0;&#125; END&#123;print "user count is ", count&#125;'</span> /etc/passwd</span><br><span class="line"><span class="symbol">root:</span><span class="symbol">x:</span><span class="number">0</span><span class="symbol">:</span><span class="number">0</span><span class="symbol">:root</span><span class="symbol">:/root</span><span class="symbol">:/bin/bash</span></span><br><span class="line">......</span><br><span class="line">user count is <span class="number">40</span></span><br></pre></td></tr></table></figure><p>count是自定义变量。之前的action{}里都是只有一个print,其实print只是一个语句，而action{}可以有多个语句，以;号隔开。<br>这里没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">awk '<span class="type">BEGIN</span> &#123;<span class="built_in">count</span>=<span class="number">0</span>;<span class="built_in">print</span> <span class="string">"[start]user count is "</span>, <span class="built_in">count</span>&#125; &#123;<span class="built_in">count</span>=<span class="built_in">count</span>+<span class="number">1</span>;<span class="built_in">print</span> $<span class="number">0</span>;&#125; <span class="type">END</span>&#123;<span class="built_in">print</span> <span class="string">"[end]user count is "</span>, <span class="built_in">count</span>&#125;' /etc/passwd</span><br><span class="line">[start]user <span class="built_in">count</span> <span class="keyword">is</span>  <span class="number">0</span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">...</span><br><span class="line">[end]user <span class="built_in">count</span> <span class="keyword">is</span>  <span class="number">40</span></span><br></pre></td></tr></table></figure><h6 id="统计某个文件夹下的文件占用的字节数"><a href="#统计某个文件夹下的文件占用的字节数" class="headerlink" title="统计某个文件夹下的文件占用的字节数"></a>统计某个文件夹下的文件占用的字节数</h6><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l |awk <span class="symbol">'BEGIN</span> &#123;size=<span class="number">0</span>;&#125; &#123;size=size+$<span class="number">5</span>;&#125; <span class="keyword">END</span>&#123;print <span class="string">"[end]size is "</span>, size&#125;'</span><br><span class="line">[<span class="keyword">end</span>]size <span class="keyword">is</span> <span class="number">8657198</span></span><br></pre></td></tr></table></figure><p>如果以M为单位显示:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l |awk 'BEGIN &#123;size=<span class="number">0</span>;&#125; &#123;size=size+$<span class="number">5</span>;&#125; END&#123;print <span class="string">"[end]size is "</span>, size/<span class="number">1024</span>/<span class="number">1024</span>,<span class="string">"M"</span>&#125;'</span><br><span class="line">[end]size is <span class="number">8.25889</span> M</span><br></pre></td></tr></table></figure><p><strong>注意，统计不包括文件夹的子目录。</strong></p><h5 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h5><p>awk中的条件语句是从C语言中借鉴来的，见如下声明方式：</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (expression) &#123;</span><br><span class="line">    statement;</span><br><span class="line">    statement;</span><br><span class="line">    ... ...</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (expression) &#123;</span><br><span class="line">    statement;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    statement2;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> (expression) &#123;</span><br><span class="line">    statement1;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (expression1) &#123;</span><br><span class="line">    statement2;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    statement3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>统计某个文件夹下的文件占用的字节数,过滤4096大小的文件(一般都是文件夹):</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l |awk '<span class="keyword">BEGIN</span> &#123;<span class="keyword">size</span>=<span class="number">0</span>;print "[<span class="keyword">start</span>]<span class="keyword">size</span> <span class="keyword">is</span> <span class="string">", size&#125; &#123;if($5!=4096)&#123;size=size+$5;&#125;&#125; END&#123;print "</span>[<span class="keyword">end</span>]<span class="keyword">size</span> <span class="keyword">is</span> <span class="string">", size/1024/1024,"</span>M<span class="string">"&#125;'</span></span><br><span class="line"><span class="string">[end]size is 8.22339 M</span></span><br></pre></td></tr></table></figure><h5 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h5><p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</p><h5 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h5><p>因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</p><h6 id="数组、循环实例"><a href="#数组、循环实例" class="headerlink" title="数组、循环实例"></a>数组、循环实例</h6><p>显示/etc/passwd的账户</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">awk -F ':' 'BEGIN &#123;<span class="built_in">count</span>=<span class="number">0</span>;&#125; &#123;<span class="built_in">name</span>[<span class="built_in">count</span>] = $<span class="number">1</span>;<span class="built_in">count</span>++;&#125;; END&#123;<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; NR; i++) print i, <span class="built_in">name</span>[i]&#125;' /etc/passwd</span><br><span class="line">root</span><br><span class="line">daemon</span><br><span class="line">bin</span><br><span class="line">sys</span><br><span class="line">sync</span><br><span class="line">games</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>这里使用for循环遍历数组</p><p>awk编程的内容极多，这里只罗列简单常用的用法，更多请参考 <a href="http://www.gnu.org/software/gawk/manual/gawk.html" target="_blank" rel="noopener">http://www.gnu.org/software/gawk/manual/gawk.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Awk </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git的初级应用</title>
      <link href="/2018/11/25/git/"/>
      <url>/2018/11/25/git/</url>
      
        <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><code># apt-get install git</code></p><h3 id="初次配置"><a href="#初次配置" class="headerlink" title="初次配置"></a>初次配置</h3><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>Git自带<code>git config</code> 工具。存储在三个不同位置：<br>1.<code>/etc/gitconfig</code> 文件: 包含系统上每一个用户及他们仓库的<strong>通用配置</strong>。 如果使用带有 <code>--system</code> 选项的 <code>git config</code> 时，它会从此文件读写配置变量。</p><ol start="2"><li><code>~/.gitconfig</code> 或 <code>~/.config/git/config</code> 文件：只针对<strong>当前用户</strong>。 可以传递 <code>--global</code> 选项让 Git 读写此文件。</li><li>当前使用仓库的 Git 目录中的 config 文件（就是 <code>.git/config</code>）：针对<strong>该仓库</strong>。<br><strong>每一个级别覆盖上一级别的配置</strong>，所以 <code>.git/config</code> 的配置变量会覆盖 <code>/etc/gitconfig</code> 中的配置变量。<h4 id="用户信息"><a href="#用户信息" class="headerlink" title="用户信息"></a>用户信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"your name"</span></span><br><span class="line">$ git config --global user.email user@example.com</span><br></pre></td></tr></table></figure></li></ol><h4 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h4><p>Git 会使用操作系统默认的文本编辑器，通常是 <strong>Vim</strong>。 如果想使用不同的文本编辑器，例如 Emacs，可以这样做：<br><code>$ git config --global core.editor emacs</code></p><h4 id="检查配置信息"><a href="#检查配置信息" class="headerlink" title="检查配置信息"></a>检查配置信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git config --list</span><br><span class="line">user.name=your name</span><br><span class="line">user.email=user@example.com</span><br><span class="line">color.status=auto</span><br><span class="line">color.branch=auto</span><br><span class="line">color.interactive=auto</span><br><span class="line">color.diff=auto</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>输入 git config <key>： 来检查 Git 的某一项配置<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span>user.name</span><br><span class="line">your name</span><br></pre></td></tr></table></figure></key></p><h3 id="获取仓库"><a href="#获取仓库" class="headerlink" title="获取仓库"></a>获取仓库</h3><h4 id="本地创建"><a href="#本地创建" class="headerlink" title="本地创建"></a>本地创建</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd your_project_dir</span></span><br><span class="line"><span class="comment"># git init</span></span><br></pre></td></tr></table></figure><h4 id="克隆创建"><a href="#克隆创建" class="headerlink" title="克隆创建"></a>克隆创建</h4><p>默认名: <code>$ git clone https://github.com/libgit2/libgit2</code><br>自定义名: <code>$ git clone https://github.com/libgit2/libgit2 mylib</code></p><h3 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h3><h4 id="检查状态git-status"><a href="#检查状态git-status" class="headerlink" title="检查状态git status"></a>检查状态git status</h4><ul><li>普通模式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working directory clean</span><br></pre></td></tr></table></figure><ul><li>简览模式</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git status -s</span><br><span class="line"> M README //仅修改未暂存</span><br><span class="line">MM Rakefile //修改并提交到暂存区后又在工作区中被修改</span><br><span class="line">A  lib/git.rb //新加到暂存区</span><br><span class="line">M  lib/simplegit.rb //修改并提交到暂存区</span><br><span class="line">?? LICENSE.txt //未跟踪的</span><br></pre></td></tr></table></figure><h4 id="跟踪文件或加入暂存git-add"><a href="#跟踪文件或加入暂存git-add" class="headerlink" title="跟踪文件或加入暂存git add"></a>跟踪文件或加入暂存git add</h4><ul><li><code>$ git add filename</code>指定文件</li><li><code># git add -A</code>所有文件</li></ul><h4 id="忽略设置-gitignore"><a href="#忽略设置-gitignore" class="headerlink" title="忽略设置.gitignore"></a>忽略设置.gitignore</h4><p><code># touch .gitignore</code><br>规则:</p><ol><li>所有空行或者以 ＃ 开头的行都会被 Git 忽略。</li><li>可以使用标准的 glob 模式匹配。(正则)</li><li>匹配模式可以以（/）开头防止递归。</li><li>匹配模式可以以（/）结尾指定目录。</li><li>要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。</li></ol><h4 id="比较文件git-diff"><a href="#比较文件git-diff" class="headerlink" title="比较文件git diff"></a>比较文件git diff</h4><ul><li>工作区与暂存区<code># git diff</code></li><li>暂存与上次commit <code># git diff --cached</code>或<code># git diff --staged</code></li></ul><h4 id="提交git-commit"><a href="#提交git-commit" class="headerlink" title="提交git commit"></a>提交git commit</h4><ul><li><code># git commit</code> </li><li><code># git commit -m &quot;fix bugs&quot;</code> 直接加入信息</li><li><p><code># git commit -a -m &quot;update&quot; 跳过</code>git add`暂存直接提交,相当于</p><blockquote></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git add -A</span></span><br><span class="line"><span class="comment"># git commit -m "update"</span></span><br></pre></td></tr></table></figure></li><li><p><code># git commit --amend</code> 撤销操作</p></li></ul><h4 id="删除文件git-rm"><a href="#删除文件git-rm" class="headerlink" title="删除文件git rm"></a>删除文件git rm</h4><ul><li>暂存区和工作区<strong>都删除</strong> <code># git rm filename</code><ul><li>修改过并放入暂存区使用-f(force)强制删除<code># git rm -f filename</code></li></ul></li><li><strong>仅删除</strong>暂存区,保留工作区 <code># git rm --cached filename</code></li><li><p>使用glob正则匹配</p><blockquote><p><code>$ git rm log/\*.log</code><br><br>注意到星号 <em> 之前的反斜杠 \，因为 Git 有它自己的文件模式扩展匹配方式，所以我们不用 shell 来帮忙展开。 此命令删除 log/ 目录下扩展名为 .log 的所有文件。 类似的比如：<br><br>`$ git rm \</em>~` <br><br>该命令为删除以 ~ 结尾的所有文件。</p></blockquote></li></ul><h4 id="git-mv移动或重命名"><a href="#git-mv移动或重命名" class="headerlink" title="git mv移动或重命名"></a>git mv移动或重命名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git mv README.md README</span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">Changes to be committed:</span><br><span class="line">  (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> to unstage)</span><br><span class="line"></span><br><span class="line">    renamed:    README.md -&gt; README</span><br></pre></td></tr></table></figure><p>其实，运行 git mv 就相当于运行了下面三条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mv README.md README</span><br><span class="line">$ git rm README.md</span><br><span class="line">$ git add README</span><br></pre></td></tr></table></figure><h4 id="git-log-查看历史"><a href="#git-log-查看历史" class="headerlink" title="git log 查看历史"></a>git log 查看历史</h4><ul><li>-p 变更内容差异<ul><li>-p -2 两次变更内容差异</li></ul></li><li>–stat 简略统计</li><li><p>–pretty</p><ul><li>–pretty=oneline 单行</li><li>–pretty=short</li><li>–pretty=full</li><li>–pretty=fuller</li><li><p>–pretty=format:”%h - %an, %ar : %s”</p><blockquote></blockquote><p>选项|说明<br>—|—<br>%H|提交对象（commit）的完整哈希字串<br>%h|提交对象的简短哈希字串<br>%T|树对象（tree）的完整哈希字串<br>%t|树对象的简短哈希字串<br>%P|父对象（parent）的完整哈希字串<br>%p|父对象的简短哈希字串<br>%an|作者（author）的名字<br>%ae|作者的电子邮件地址<br>%ad|作者修订日期（可以用 –date= 选项定制格式）<br>%ar|作者修订日期，按多久以前的方式显示<br>%cn|提交者（committer）的名字<br>%ce|提交者的电子邮件地址<br>%cd|提交日期<br>%cr|提交日期，按多久以前的方式显示<br>%s|提交说明</p></li></ul></li><li>–since</li><li>–until</li></ul><h4 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a><a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E6%92%A4%E6%B6%88%E6%93%8D%E4%BD%9C" target="_blank" rel="noopener">撤销操作</a></h4><ol><li><code># git commit --amend</code></li><li><code># git reset HEAD filename</code> 取消暂存filename</li><li><code>$ git checkout -- CONTRIBUTING.md</code> 撤销修改, <strong>风险操作</strong></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mac app图标调整</title>
      <link href="/2018/11/21/mac-app%E5%9B%BE%E6%A0%87%E8%B0%83%E6%95%B4/"/>
      <url>/2018/11/21/mac-app%E5%9B%BE%E6%A0%87%E8%B0%83%E6%95%B4/</url>
      
        <content type="html"><![CDATA[<p><strong>运行“终端”程序，执行以下命令：</strong></p><ol><li><p>整每一列显示图标数量，7 表示每一列显示7个，在我的电脑上，7个个人觉得比较不错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dock springboard-rows -int 7</span><br></pre></td></tr></table></figure></li><li><p>调整每一行显示图标数量，这里我用的是8</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dock springboard-columns -int 8</span><br></pre></td></tr></table></figure></li><li><p>由于修改了每一页显示图标数量，可能需要重置Launchpad</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Excel批量修改相同位置的值</title>
      <link href="/2018/10/27/excelbat/"/>
      <url>/2018/10/27/excelbat/</url>
      
        <content type="html"><![CDATA[<h3 id="1-目标"><a href="#1-目标" class="headerlink" title="1. 目标"></a>1. 目标</h3><p><code>h:\Users\lgxlyh\Desktop\fen\</code>文件夹下有78张表格,布局一致。<br>现要修改所有表格中<code>AQ19</code>的值为<code>FF0000</code></p><blockquote><p>表格中有专用排版和安全锁定,使用python实现后发现版式 <strong>被更改</strong>。选用Excel自带VBA实现后 <strong>保留了原版式</strong>。</p></blockquote><h3 id="2-测试环境"><a href="#2-测试环境" class="headerlink" title="2. 测试环境"></a>2. 测试环境</h3><p><strong>通过</strong></p><ul><li>Windows 10<ul><li>Excel 2010</li><li>Excel 2013</li></ul></li></ul><p><strong>未通过</strong></p><blockquote><p>mac office未通过<code>dir(dirpath &amp; &quot;*.xls&quot;)</code>方法</p></blockquote><ul><li>MacOs 10.13<ul><li>Excel 2016</li></ul></li></ul><h3 id="3-测试代码"><a href="#3-测试代码" class="headerlink" title="3. 测试代码"></a>3. 测试代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Sub test()</span><br><span class="line">    dirpath = &quot;h:\Users\lgxlyh\Desktop\fen\&quot;</span><br><span class="line">    filename = Dir(dirpath &amp; &quot;*.xls&quot;)</span><br><span class="line">    Do While filename &lt;&gt; &quot;&quot;</span><br><span class="line">        Set wb = Workbooks.Open(dirpath &amp; filename)</span><br><span class="line">        wb.Sheets(1).Range(&quot;aq19&quot;).Value = &quot;FF0000&quot;</span><br><span class="line">        wb.Save</span><br><span class="line">        wb.Close True</span><br><span class="line">        filename = Dir</span><br><span class="line">    Loop</span><br><span class="line">    Set wb = Nothing</span><br><span class="line">    MsgBox &quot;完成&quot;</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Excel </tag>
            
            <tag> VBA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Excel拆分Sheets</title>
      <link href="/2018/10/26/excelsplit/"/>
      <url>/2018/10/26/excelsplit/</url>
      
        <content type="html"><![CDATA[<h3 id="1-目标"><a href="#1-目标" class="headerlink" title="1. 目标"></a>1. 目标</h3><p>Workbook下有多个Sheet,需要将每个Sheet单独分离出来保存为以Sheet Name为名称的Workbook。</p><h3 id="2-测试环境"><a href="#2-测试环境" class="headerlink" title="2. 测试环境"></a>2. 测试环境</h3><ul><li>Windows 10</li><li>MacOs 10.13</li></ul><h3 id="3-测试代码"><a href="#3-测试代码" class="headerlink" title="3. 测试代码"></a>3. 测试代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Sub test() </span><br><span class="line">    save_path = &quot;/Volumes/work/split/test/&quot;</span><br><span class="line">    For Each sht In ActiveWorkbook.Sheets</span><br><span class="line">        sht.Copy</span><br><span class="line">        ActiveWorkbook.SaveAs Filename:= _</span><br><span class="line">            save_path &amp; sht.Name &amp; &quot;.xlsx&quot;, FileFormat:= _</span><br><span class="line">            xlOpenXMLWorkbook, CreateBackup:=False</span><br><span class="line">        ActiveWindow.Close</span><br><span class="line">    Next</span><br><span class="line">End Sub</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Excel </tag>
            
            <tag> VBA </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mysql time_zone 时区调整</title>
      <link href="/2018/05/30/mysqltimezone/"/>
      <url>/2018/05/30/mysqltimezone/</url>
      
        <content type="html"><![CDATA[<h3 id="maridb时间问题"><a href="#maridb时间问题" class="headerlink" title="maridb时间问题"></a>maridb时间问题</h3><p><code>[root@mongodb ~]# timedatectl</code>   </p><ul><li><p>修改系统时区，Shanghai为东8区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@mongodb ~]<span class="comment"># timedatectl set-timezone Asia/Shanghai</span></span><br><span class="line">[root@mongodb ~]<span class="comment"># timedatectl </span></span><br><span class="line">      Local time: Thu 2016-11-10 10:47:32 CST</span><br><span class="line">  Universal time: Thu 2016-11-10 02:47:32 UTC</span><br><span class="line">        RTC time: Thu 2016-11-10 02:50:43</span><br><span class="line">        Timezone: Asia/Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: n/a</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC <span class="keyword">in</span> <span class="built_in">local</span> TZ: no</span><br><span class="line">      DST active: n/a</span><br></pre></td></tr></table></figure></li><li><p>登录数据库查看时间、时区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; select now();</span><br><span class="line">MariaDB [(none)]&gt; show variables like <span class="string">"%time_zone%"</span>;</span><br></pre></td></tr></table></figure></li><li><p>修改mysql全局时区为北京时间，即我们所在的东8区<br><code>set global time_zone = &#39;+8:00&#39;;</code>  </p></li><li>修改当前会话时区<br><code>set time_zone = &#39;+8:00&#39;;</code>  </li><li>立即生效<br><code>flush privileges;</code> </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Debian日志时间不正确修改</title>
      <link href="/2018/05/30/logtime/"/>
      <url>/2018/05/30/logtime/</url>
      
        <content type="html"><![CDATA[<h2 id="日志时间问题"><a href="#日志时间问题" class="headerlink" title="日志时间问题"></a>日志时间问题</h2><ol><li>修改时区,<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"export TZ='Asia/Shanghai'"</span>  &gt;&gt; /etc/profile</span><br><span class="line">cat /etc/profile |grep TZ  </span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">date -R</span><br><span class="line">date</span><br></pre></td></tr></table></figure></li></ol><p>Sat Aug 19 17:03:17 CST 2017</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">timedatectl status</span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone <span class="string">"Asia/Shanghai"</span></span><br></pre></td></tr></table></figure><ol start="2"><li>重启日志服务<br><code>systemctl restart rsyslog</code></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mysql修改密码登陆</title>
      <link href="/2018/05/21/test/"/>
      <url>/2018/05/21/test/</url>
      
        <content type="html"><![CDATA[<h3 id="安装：apt-get-install-mysql-server"><a href="#安装：apt-get-install-mysql-server" class="headerlink" title="安装：apt-get install mysql-server"></a>安装：<code>apt-get install mysql-server</code></h3><h3 id="修改密码登陆"><a href="#修改密码登陆" class="headerlink" title="修改密码登陆:"></a>修改密码登陆:</h3><p>刚安装完成后不用输入密码，直接mysql就登陆了<br><strong>我自己用的方法</strong></p><blockquote><p>user表中，账号root的plugin，内容为：<code>unix_socket</code><br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; <span class="keyword">select</span> host,<span class="keyword">user</span>,<span class="keyword">password</span>,plugin <span class="keyword">from</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure></p></blockquote><ol><li>更改plugin内容和password：<br><code>update user set plugin=&#39;mysql_native_password&#39;,password=password(&#39;qlxxxx&#39;) where user=&#39;root&#39;;</code></li><li>再看表中的信息：<br><code>select host,user,password,plugin from user;</code></li><li><p>更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; flush privileges;</span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br></pre></td></tr></table></figure></li><li><p>重启数据库：<br><code>service mysql restart</code>或<code>systemctl restart mysql</code></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Debian一些基本配置记录</title>
      <link href="/2018/01/31/debian-config/"/>
      <url>/2018/01/31/debian-config/</url>
      
        <content type="html"><![CDATA[<h3 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h3><h4 id="Root用户远程登陆"><a href="#Root用户远程登陆" class="headerlink" title="Root用户远程登陆"></a>Root用户远程登陆</h4><ol><li>打开配置文件<br><code>vim /etc/ssh/sshd_config</code></li><li>查找<strong>PermitRootLogin</strong><br><code>/PermitRootLogin</code></li><li>修改参数为yes<br><code>PermitRootLogin yes</code></li></ol><h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><h4 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h4><ul><li>查看<code>crontab -l</code></li><li>编辑<code>crontab -e</code></li></ul><ul><li>分 时 日 月 周 <code>python3 /home/lgx/qc2.py&gt;&gt;qc2.log 2&amp;1</code>2为错误 1为标准执行</li><li><code>*/2 * * * * code.....</code>为两分钟执行一次</li><li><code>30 2 * * * code...</code>为每日凌晨2:30执行</li></ul><ul><li>qc2.py文件改为可执行 <code>chmod +x qc2.py</code> </li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Install Hexo On Debian9</title>
      <link href="/2018/01/21/Install-Hexo-On-Debian9/"/>
      <url>/2018/01/21/Install-Hexo-On-Debian9/</url>
      
        <content type="html"><![CDATA[<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Using Debian, <span class="keyword">as</span> root</span><br><span class="line">curl -sL http<span class="variable">s:</span>//<span class="keyword">deb</span>.nodesource.<span class="keyword">com</span>/setup_10.<span class="keyword">x</span> | bash -</span><br><span class="line">apt-<span class="built_in">get</span> install -<span class="keyword">y</span> nodejs</span><br></pre></td></tr></table></figure><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p><code>apt-get install git-core</code></p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure><h4 id="创建Blog文件夹"><a href="#创建Blog文件夹" class="headerlink" title="创建Blog文件夹"></a>创建Blog文件夹</h4><p><code>mkdir /home/lgx/blog</code></p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init <span class="string">/home/lgx/blog</span></span><br><span class="line"><span class="keyword">cd</span> <span class="string">/home/lgx/blog</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="安装Theme"><a href="#安装Theme" class="headerlink" title="安装Theme"></a>安装Theme</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> themes</span><br><span class="line">git clone --branch v5.<span class="number">1.2</span> http<span class="variable">s:</span>//github.<span class="keyword">com</span>/iissnan/hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure><h4 id="生成表态文件"><a href="#生成表态文件" class="headerlink" title="生成表态文件"></a>生成表态文件</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">cd</span></span> ..</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><h4 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h4><ul><li>hexo s</li><li>hexo d</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>曾经的U盘系统启动问题</title>
      <link href="/2018/01/02/booterr/"/>
      <url>/2018/01/02/booterr/</url>
      
        <content type="html"><![CDATA[<blockquote><p>安装Debian到蓝光电子U盘,完成的时候grub错误了<br>导致不能从U盘启动,拿回家上网查询解决方案<br>记录下来</p></blockquote><ol><li>插入Debian安装U盘,插入蓝光电子系统U盘,进入安装界面选择修复模式</li><li>选择语言后ALT+F2进入命令行</li><li>fdisk -l查看磁盘系统,记下debian的分区（dev/sdX）</li></ol><ul><li>董屁笔记本上是:dev/sdc1（boot）adc2(/) sdc3(逻辑分区）sdc5（swap）逻辑分区</li></ul><ol start="4"><li><p>挂载到/mnt,如果有boot分区也需要挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mount -t ext4 /dev/sdc2 /mnt</span><br><span class="line">mount -t ext4 /dev/sdc1 /mnt/boot</span><br><span class="line">mount --<span class="built_in">bind</span> /dev /mnt/dev</span><br><span class="line">mount --<span class="built_in">bind</span> /dev/pts /mnt/dev/pts</span><br><span class="line">mount --<span class="built_in">bind</span> /proc /mnt/proc</span><br><span class="line">mount --<span class="built_in">bind</span> /sys /mnt/sys</span><br><span class="line">chroot /mnt</span><br><span class="line">update-grub</span><br><span class="line">grub-install /dev/sdc</span><br><span class="line">grub-install --recheck /dev/sdc</span><br></pre></td></tr></table></figure></li><li><p>ctrl+D退出chroot</p></li><li><p>取消挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt/dev/pts</span><br><span class="line">umount /mnt/dev</span><br><span class="line">umount /mnt/proc</span><br><span class="line">umount /mnt/sys</span><br><span class="line">umount /mnt/boot</span><br><span class="line">umount /mnt/usr</span><br><span class="line">umount /mnt</span><br></pre></td></tr></table></figure></li><li><p>重启reboot</p></li></ol><ul><li>可以看到引导了,进入后想要加载其它硬盘的系统可以再用update-grub完成全硬盘系统引导</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo LocalSearch</title>
      <link href="/2017/10/22/hexo-LocalSearch/"/>
      <url>/2017/10/22/hexo-LocalSearch/</url>
      
        <content type="html"><![CDATA[<p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></p><p>编辑<strong>站点配置文件 blog/_config.yml</strong>，新增以下内容到任意位置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure></p><p>编辑<strong>主题配置文件 themes/next/_config.yml</strong>，启用本地搜索功能：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p><strong>重新生成静态文件</strong><br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo clean</span></span><br><span class="line"><span class="attribute">hexo g</span></span><br></pre></td></tr></table></figure></p><p>测试本地搜索成功</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>为什么一个讨厌记事的人会有自己的Blog</title>
      <link href="/2017/05/21/ruken/"/>
      <url>/2017/05/21/ruken/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本人个性懒散,建立Blog是很久之前就应该完成的事,记忆力不能应对需求,丢失东西会付出更多时间和精力</p></blockquote><p>大学毕业后,干了需要谨慎细致的工作,主要涉及实验分析、结果汇总之类。<br>自身业务能力弱,上级考核样品多<br>无奈之下,想出记录下网络上所有样品信息来应对</p><ul><li>爬虫用Python完成听说比较方便</li><li>环境选用Debian,顺带学习下Linux</li><li>跑Linux听说Andriod就可以</li><li>听说是跑在Termux的容器里</li><li>家用当摄像头的废手机是安卓,已Root</li><li>既然能跑Linux那也能跑apache</li><li>既然能跑apache那也能跑php</li><li>既然能跑php那就能公众号服务<br>Ok,先玩玩,不行就vps<br>上面说的东西完全只是听过,准备动手就是(｡ŏ_ŏ)这样</li></ul><p>一点一点解决,想实现的东西也基本实现<br>φ(≧ω≦*)♪ 呵呵,<strong>青铜玩家</strong></p><p>慢慢发现手机性能有点差,长期插电还不稳定,自己关机<br>可能和Root有关(另外几个电信送的烂手机没有Root就没有这情况)<br>丢在角落吃灰吧<br>今年Bilibili看到<strong>软路由</strong>好多人玩,买了个3855U玩</p><ul><li>路由系统选了<strong>Lede</strong>,听说插件方便</li><li>只作路由太浪费,装在Proxmox ve虚拟环境下</li><li>Proxmox是基于Debian的,刚好迁移过来继续爬数据</li><li>旧电脑的硬盘拿来Samba当家庭影音存储</li><li>Debian下配置Aria、Transmission之类的也能远程下载,黑裙这种东西暂时没有需求<blockquote><p>满载可能也就20W左右,Lede自动签到、去广告之类的也算好用</p></blockquote></li></ul><p>没事就是折腾,作为一只菜鸟好多知识边学边做,功能实现不久就忘记了<br>学人写点东西在自己仓库里方便查找,于是发现了hexo</p><p>这么久一直没有自己的vps,总是觉得没有时间来折腾这些东西,对一个大学计算机二级没过的人需求不大。翻墙什么的也不常用,但是frp之类的内网穿透挺有用的,不然我怎么实现公众号和远程ssh呢<br>暂时先这样用着,以后再说吧<br>٩(๑•̀ω•́๑)۶</p>]]></content>
      
      
      
        <tags>
            
            <tag> Mr.Li </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>前端艺术家分享的模版和图片</title>
      <link href="/2017/05/02/photoshare/"/>
      <url>/2017/05/02/photoshare/</url>
      
        <content type="html"><![CDATA[<p><a href="pixelmap.amcharts.com">地图矢量模版</a></p><blockquote><p>—————————————————————</p></blockquote><ol><li><a href="http://www.freepik.com/" target="_blank" rel="noopener">FreePik：超过七万组的免费矢量图片</a></li><li><a href="http://www.flaticon.com/" target="_blank" rel="noopener">Flaticon ：精美设计的矢量 ICON 图片搜索引擎</a></li><li><a href="http://www.vecteezy.com/" target="_blank" rel="noopener">Vecteezy ：设计师的免费矢量图交换网站</a></li><li><p><a href="http://vector4free.com/" target="_blank" rel="noopener">Vector4Free：保持快速更新的矢量图资源</a></p><blockquote><p>————————————————————</p></blockquote></li><li><p><a href="http://streetwill.co/" target="_blank" rel="noopener">Streetwill</a><br>Streetwill 提供愿意免费分享摄影作品的摄影师的高解析照片，你可以在这里找到对于世界上不同景物的不同摄影角度作品。</p></li><li>[Unsplash](<a href="https://unsplash.com/]" target="_blank" rel="noopener">https://unsplash.com/]</a><br>Unsplash 的特色是每隔 10 天会上传 10 张新的高解析度摄影作品，你可以当成自己摄影参考来浏览这个网站，也可以下载这些照片来为自己的设计之用。</li><li><a href="http://www.gratisography.com/" target="_blank" rel="noopener">GRATISOGRAPHY</a><br>GRATISOGRAPHY 的作品来自于 RYAN MCGUIRE 这位摄影师，你可以在这里找到并下载他所拍摄、后期的各种高解析度照片，尤其是他的风格比较时尚前卫，如果你需要这样的照片图库，别忘了来这里寻宝。</li><li><a href="http://jaymantri.com/" target="_blank" rel="noopener">Jay Mantri</a><br>Jay Mantri 每个礼拜四会上传七张他的最新摄影作品到这个网站，这位摄影师对于风景、物品有独特的构图比例，画面干净漂亮，你可以在这里下载独一无二的照片来作为自己的设计之用。当然，用来当桌面也不错。</li><li><a href="http://www.resplashed.com/" target="_blank" rel="noopener">re:splashed</a><br>re:splashed 收集来自不同摄影师的数百张高解析度的照片作品。以风景和人物为主，你可以在这里浏览，打开照片就能直接下载，一样提供免费自由使用。</li><li><a href="http://lifeopix.com/" target="_blank" rel="noopener">Life Of Pix</a><br>Life Of Pix 则是以每周更新的频率，收藏来自世界各地不同摄影师愿意免费分享的摄影照片作品，你可以在这里找到「来自各地不同生活风格」的摄影景物照片，直接点击就能下载。</li><li><a href="https://www.pexels.com/" target="_blank" rel="noopener">Pexels</a><br>Pexels 则是以每天更新五张精选免费摄影照片的速度，在增加着他的免费图库。同样是针对世界上不同角落、不同景物的摄影照片，你也很容易在这里找到适合自己文章或作品意境的背景图。</li><li><a href="http://foodiesfeed.com/" target="_blank" rel="noopener">Foodies Feed</a><br>这是一个以「食物」为主题的免费摄影照片图库，而且全部来自 Jakub 这位摄影师，他热爱拍摄食物，也把自己的作品免费分享在网站上，提供大家下载使用。你甚至可以在这里打包下载汉堡主题、咖啡主题等不同的美食摄影照片图库。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Share </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2017/01/01/hello-world/"/>
      <url>/2017/01/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
